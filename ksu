#!/usr/bin/env bash

set -e

. functions

KSU_IMAGE=${KSU_IMAGE:-alpine}

function usage {
    cat <<END
Spawn super user priviledged pod on a target node.

Usage:
  $0 <node> [<namespace>]

Options:
  --help, -h
    Display this help
END
    exit 2
}

while [[ $# -gt 0 ]]; do
case $1 in
--help | -h)
    usage
    ;;
--)
    shift
    break
    ;;
-*)
    error "Unknown option: $1"
    ;;
*)
    break
    ;;
esac
done

[[ $# -ge 1 && $# -le 2 ]] || usage


node=$1 namespace=$2

[[ $(kubectl get node "$node" --ignore-not-found) ]] || error "Node not found"

pod_overrides=$(cat <<END
{"spec":{
  "nodeName": "$node",
  "hostPID": true,
  "hostNetwork": true,
  "containers":[{
    "name":"debug",
    "image":"$KSU_IMAGE",
    "command": ["nsenter", "--mount=/proc/1/ns/mnt", "--ipc=/proc/1/ns/ipc", "--uts=/proc/1/ns/uts", "--", "bash"],
    "stdin": true,
    "tty": true,
    "securityContext": {"privileged": true}
  }],
  "automountServiceAccountToken": false,
  "tolerations": [{"operator": "Exists"}]
}}
END
)

kubectl -n "$namespace" run ksu -it --quiet --restart=Never --rm --image "$KSU_IMAGE" \
  --labels "owner=$USER,kind=debug" \
  --overrides "$pod_overrides"
